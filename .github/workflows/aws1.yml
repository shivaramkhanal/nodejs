# This workflow will build and push a new container image to Amazon ECR,
name: 'GitHub Actions to build and push docker image to ECR'

on: 
  push:
    branches:
      - v*.*.*.* 
                   
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

      
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        set -x 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nodejs
        IMAGE_TAG: ${{ github.sha }}

    - name: Push to GitHub Packages
      run: |
        docker login -u$username -p $password $registry
        docker tag  $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $registry/$repository:$IMAGE_TAG
        docker push $registry/$repository:$IMAGE_TAG
      env:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: rupesh2010/nodejs/nodejs
          IMAGE_TAG: ${{ github.sha }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nodejs
